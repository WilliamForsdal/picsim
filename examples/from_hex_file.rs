
use picsim::{cpu::CPU, opcode::OpCode};

// Generated by pic-as.exe
const HEX: &str = "
:10000000010A010AC80C02003B0C06004605060A5C
:021FFE00EA0FE8
:00000001FF
";

fn main() {
    let (ops, cfg) = OpCode::from_hex(HEX);
    for op in ops {    
        let decoded = OpCode::decode(op);
        println!("{decoded:?}");
    }
    return ;
    let mut cpu: CPU = CPU::from_hex(HEX);
    println!("w:{}, pc:{:3}, z:{}, c:{}", cpu.w, cpu.pc, cpu.status_z(), cpu.status_c());
    for _ in 0..10000 {
        cpu.tick();
        println!("pc:{:3} prev: {:?}, next: {:?}", cpu.pc, cpu.last_executed_op, cpu.next_op);
    }
}